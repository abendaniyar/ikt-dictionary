import streamlit as st
import json

# JSON —Ñ–∞–π–ª–¥—ã –∂“Ø–∫—Ç–µ—É
with open("data.json", "r", encoding="utf-8") as f:
    terms = json.load(f)

st.set_page_config(page_title="–≠–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã“õ “±“ì—ã–º–¥—ã“õ-—Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—è–ª—ã“õ —Å”©–∑–¥—ñ–∫", layout="wide")
st.title("üìò–ê–ö–¢ –∫—É—Ä—Å—ã –±–æ–π—ã–Ω—à–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã“õ “±“ì—ã–º–¥—ã“õ-—Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—è–ª—ã“õ —Å”©–∑–¥—ñ–∫")

# –Ü–∑–¥–µ—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã–Ω “õ–æ—Å—É
search_query = st.text_input("üîç –¢–µ—Ä–º–∏–Ω–¥—ñ —ñ–∑–¥–µ—É:", "").strip().lower()

if search_query:
    st.header(f"üîé –Ü–∑–¥–µ—É –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ: \"{search_query}\"")

    found_terms = []  # –ë–∞—Ä–ª—ã“õ –¥”ô—Ä—ñ—Å—Ç–µ—Ä–¥–µ–Ω —Å”ô–π–∫–µ—Å —Ç–µ—Ä–º–∏–Ω–¥–µ—Ä–¥—ñ –∂–∏–Ω–∞–π—Ç—ã–Ω —Ç—ñ–∑—ñ–º

    for lecture, term_list in terms.items():
        for term in term_list:
            if search_query in term['kk'].lower() or search_query in term['ru'].lower() or search_query in term['en'].lower():
                found_terms.append((lecture, term))

    if not found_terms:
        st.warning("üõë –ë“±–ª —ñ–∑–¥–µ—É —Å“±—Ä–∞–Ω—ã—Å—ã–Ω–∞ —Å”ô–π–∫–µ—Å —Ç–µ—Ä–º–∏–Ω–¥–µ—Ä —Ç–∞–±—ã–ª–º–∞–¥—ã.")
    else:
        for lecture, term in found_terms:
            st.subheader(f"üìÇ {lecture} | üñ• {term['kk']} / {term['ru']} / {term['en']}")

            with st.expander("üìñ –ê–Ω—ã“õ—Ç–∞–º–∞ / –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ / Definition"):
                st.markdown(f"**KK:** {term['definition']['kk']}")
                st.markdown(f"**RU:** {term['definition']['ru']}")
                st.markdown(f"**EN:** {term['definition']['en']}")

            with st.expander("üí¨ –ú—ã—Å–∞–ª / –ü—Ä–∏–º–µ—Ä / Example"):
                st.markdown(f"**KK:** {term['example']['kk']}")
                st.markdown(f"**RU:** {term['example']['ru']}")
                st.markdown(f"**EN:** {term['example']['en']}")
            # üîÅ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤—è–∑–∏ (—Ç–µ–∑–∞—É—Ä—É—Å)
            if 'relations' in term:
                with st.expander("üß† –°–µ–º–∞–Ω—Ç–∏–∫–∞–ª—ã“õ –±–∞–π–ª–∞–Ω—ã—Å—Ç–∞—Ä / –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Å–≤—è–∑–∏ / Semantic Relations"):
                    rel = term['relations']
                    if rel.get('synonyms'):
                        st.markdown(f"**üîÅ –°–∏–Ω–æ–Ω–∏–º–¥–µ—Ä / –°–∏–Ω–æ–Ω–∏–º—ã / Synonyms:** {', '.join(rel['synonyms'])}")
                    if rel.get('antonyms'):
                        st.markdown(f"**üÜö –ê–Ω—Ç–æ–Ω–∏–º–¥–µ—Ä / –ê–Ω—Ç–æ–Ω–∏–º—ã / Antonyms:** {', '.join(rel['antonyms'])}")
                    if rel.get('broader_term'):
                        st.markdown(f"**üîº –ñ–∞–ª–ø—ã–ª–∞–º–∞ “±“ì—ã–º / –û–±–æ–±—â–∞—é—â–µ–µ –ø–æ–Ω—è—Ç–∏–µ / Broader term:** {rel['broader_term']}")
                    if rel.get('narrower_terms'):
                        st.markdown(f"**üîΩ –ê—Ä–Ω–∞–π—ã “±“ì—ã–º–¥–∞—Ä / –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è / Narrower terms:** {', '.join(rel['narrower_terms'])}")
                    if rel.get('related_terms'):
                        st.markdown(f"**üîó “ö–∞—Ç—ã—Å—Ç—ã “±“ì—ã–º–¥–∞—Ä / –í —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º –ø–æ–Ω—è—Ç–∏–∏ / Related terms:** {', '.join(rel['related_terms'])}")

            
            if term.get("image"):
                st.image(term["image"], caption="–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è", use_container_width=True)

            if term.get("source"):
                st.markdown(f"üîó [–î–µ—Ä–µ–∫–∫”©–∑ / –ò—Å—Ç–æ—á–Ω–∏–∫ / Source]({term['source']})")

            st.markdown("---")
else:
    # –î”ô—Ä—ñ—Å—Ç–µ—Ä–¥—ñ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä —Ä–µ—Ç—ñ–Ω–¥–µ –∫”©—Ä—Å–µ—Ç—É
    lecture = st.sidebar.radio("üìÇ –î”ô—Ä—ñ—Å —Ç–∞“£–¥–∞“£—ã–∑:", list(terms.keys()))
    st.header(lecture)

    if lecture in terms:
        for term in terms[lecture]:
            st.subheader(f"üñ• {term['kk']} / {term['ru']} / {term['en']}")

            with st.expander("üìñ –ê–Ω—ã“õ—Ç–∞–º–∞ / –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ / Definition"):
                st.markdown(f"**KK:** {term['definition']['kk']}")
                st.markdown(f"**RU:** {term['definition']['ru']}")
                st.markdown(f"**EN:** {term['definition']['en']}")

            with st.expander("üí¨ –ú—ã—Å–∞–ª / –ü—Ä–∏–º–µ—Ä / Example"):
                st.markdown(f"**KK:** {term['example']['kk']}")
                st.markdown(f"**RU:** {term['example']['ru']}")
                st.markdown(f"**EN:** {term['example']['en']}")

            if term.get("image"):
                st.image(term["image"], caption="–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è", use_container_width=True)

            if term.get("source"):
                st.markdown(f"üîó [–î–µ—Ä–µ–∫–∫”©–∑ / –ò—Å—Ç–æ—á–Ω–∏–∫ / Source]({term['source']})")

            st.markdown("---")
